import psycopg2
import mysql.connector

# Mapping of MySQL data types to PostgreSQL data types
DATA_TYPE_MAPPING = {
    'int': 'INTEGER',
    'tinyint': 'SMALLINT',
    'smallint': 'SMALLINT',
    'mediumint': 'INTEGER',
    'bigint': 'BIGINT',
    'decimal': 'DECIMAL',
    'float': 'REAL',
    'double': 'DOUBLE PRECISION',
    'char': 'CHAR',
    'varchar': 'VARCHAR',
    'text': 'TEXT',
    'date': 'DATE',
    'time': 'TIME',
    'datetime': 'TIMESTAMP',
    'timestamp': 'TIMESTAMP',
    'enum': 'VARCHAR',
    'set': 'VARCHAR',
}

def fetch_mysql_columns(host, mysql_user, mysql_password, mysql_database, table_name):
    """
    Fetch column schema from a MySQL table.
    """
    try:
        mysql_conn = mysql.connector.connect(
            host=host,
            user=mysql_user,
            password=mysql_password,
            database=mysql_database
        )
        cursor = mysql_conn.cursor()

        cursor.execute(f"SHOW COLUMNS FROM {table_name}")
        columns = cursor.fetchall()

        cursor.close()
        mysql_conn.close()

        column_details = [(col[0], col[1]) for col in columns]

        return column_details
    except mysql.connector.Error as e:
        raise Exception(f"Error fetching column schema from MySQL: {e}")

def create_postgres_table(host, postgres_user, postgres_password, postgres_database, table_name, columns):
    """
    Create a table in PostgreSQL.
    """
    try:
        postgres_conn = psycopg2.connect(
            host=host,
            user=postgres_user,
            password=postgres_password,
            database=postgres_database
        )
        cursor = postgres_conn.cursor()

        query = f"CREATE TABLE IF NOT EXISTS {table_name} ("
        query += ", ".join([f"{col[0]} {DATA_TYPE_MAPPING.get(col[1].decode(), 'TEXT')}" for col in columns])
        query += ")"

        cursor.execute(query)
        postgres_conn.commit()

        cursor.close()
        postgres_conn.close()

        print(f"Table '{table_name}' created successfully in PostgreSQL.")
    except psycopg2.Error as e:
        raise Exception(f"Error creating table in PostgreSQL: {e}")

# MySQL connection details
mysql_user = 'admin'
mysql_password = 'yourpassword'
mysql_host = "my-mysql-db.chaiuouywg8z.us-east-1.rds.amazonaws.com"
mysql_database = 'mydatabase'
mysql_table = "employees"

# PostgreSQL connection details
postgres_user = 'test'
postgres_password = 'test1234'
postgres_host = 'mcapostgresdb.chaiuouywg8z.us-east-1.rds.amazonaws.com'
postgres_database = 'postgressdb'
postgres_table = "employees"

try:
    # Fetch column schema from MySQL
    mysql_columns = fetch_mysql_columns(mysql_host, mysql_user, mysql_password, mysql_database, mysql_table)

    # Create PostgreSQL table with the same schema as MySQL table
    create_postgres_table(postgres_host, postgres_user, postgres_password, postgres_database, postgres_table, mysql_columns)

    print("Table created successfully in PostgreSQL!")
except Exception as e:
    print(f"Error: {str(e)}")
